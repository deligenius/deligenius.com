{"componentChunkName":"component---src-pages-docs-jsx","path":"/docs/basic-routing","result":{"data":{"mdx":{"id":"2ec7af18-4839-539d-aa6a-aaa52a8fca78","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Basic Routing\",\n  \"route\": \"/docs/basic-routing\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Basic Routing\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If you are familiar with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://expressjs.com/\"\n  }), \"express.js\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" is your friend.\")), mdx(\"p\", null, \"Route definition:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"router.METHOD(PATH, HANDLER)\\n\")), mdx(\"p\", null, \"Where:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"METHOD = get | post | put | delete | connect | options | trace | patch\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PATH: string\"), \" is a path on the server, starts with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"/\\\"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HANDLER: Function\"), \" will execute when the route is matched\")), mdx(\"h3\", null, \"A routing example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import {\\n  Application,\\n  Router,\\n} from \\\"https://raw.githubusercontent.com/deligenius/deligenius/master/mod.ts\\\";\\n\\nlet app = new Application({ port: 8000 }).listen();\\nlet router = new Router(\\\"/\\\");\\n\\napp.use(router);\\n\\nrouter.get(\\\"/\\\", ({ req, res }, next) => {\\n  res.send(\\\"You reached \\\" + req.url);\\n});\\n\")), mdx(\"h4\", null, \"Explanation of the code:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"let router = new Router(\\\"/\\\")\\n\")), mdx(\"p\", null, \"We first create a new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Router\"), \" for route \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"/\\\"\"), \", which means that\\neverytime a client send HTTP request goes to \\\"http://localhost/\\\", this router\\nwill receive the request.\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"app.use(router)\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app\"), \" is an instance of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Application\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app.use(router)\"), \" activate the router.\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"router.get(\\\"/\\\", ({ req, res }) => {\\n  res.send(\\\"You reached \\\" + req.url)\\n})\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"router.get(PATH, HANDLER)\"), \" accepts \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PATH\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HANDLER\")), mdx(\"p\", null, \"Where:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PATH\"), \" = \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\\"/\\\"\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HANDLER\"), \" =\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"({ req, res }) => {\\n  res.send(\\\"You reached \\\" + req.url)\\n}\\n\")), mdx(\"p\", null, \"When the request hit the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PATH\"), \", the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HANDLER\"), \" function executes.\\nHere the handler sends a message with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\"You reached \\\" + req.url\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Basic Routing","route":"/docs/basic-routing"}}},"pageContext":{"id":"2ec7af18-4839-539d-aa6a-aaa52a8fca78","slug":"/docs/basic-routing"}}}