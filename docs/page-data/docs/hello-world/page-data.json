{"componentChunkName":"component---src-pages-docs-jsx","path":"/docs/hello-world","result":{"data":{"mdx":{"id":"b1fd84a5-2517-5cba-9b30-1040dc25dcc1","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hello World example - Deligenius\",\n  \"route\": \"/docs/hello-world\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Hello world example\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"// ./app.ts\\nimport { Application } from \\\"https://raw.githubusercontent.com/deligenius/deligenius/master/mod.ts\\\";\\n\\nlet app = new Application({ port: 8000 }).listen();\\n\\napp.use((ctx) => {\\n  ctx.send(\\\"Hello World!\\\");\\n});\\n\")), mdx(\"p\", null, \"The server starts and listens on port 8000 for requests.\\nIt responsed every request with \\\"Hello World\\\".\"), mdx(\"h4\", null, \"Run server locally\"), mdx(\"p\", null, \"Create a directory named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"server\"), \". Then create a file named\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"app.ts\"), \" then copy the code above. Your directory should be like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"server/\\n\\u2514\\u2500\\u2500 app.ts\\n\")), mdx(\"p\", null, \"Run the app with command below:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"> deno run \\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Hello World example - Deligenius","route":"/docs/hello-world"}}},"pageContext":{"id":"b1fd84a5-2517-5cba-9b30-1040dc25dcc1","slug":"/docs/hello-world"}}}